{"version":3,"sources":["webpack://03-microcms/./src/components/PostContent.js","webpack://03-microcms/./src/components/PostContent.module.css","webpack://03-microcms/./src/pages/preview.js"],"names":["props","post","title","content","category","publishedAt","thumbnail","className","src","url","alt","name","dangerouslySetInnerHTML","__html","useState","setPost","params","URLSearchParams","location","search","contentId","get","draftKey","apiKey","useEffect","fetch","apiHost","headers","then","res","ok","Error","status","statusText","json","catch","err","alert"],"mappings":"+JAGA,IAsBA,EAtBoB,SAACA,GAAW,IAAD,EACgCA,EAAMC,KAA3DC,EADqB,EACrBA,MAAOC,EADc,EACdA,QAASC,EADK,EACLA,SAAUC,EADL,EACKA,YAAaC,EADlB,EACkBA,UAC/C,OACE,+BACE,uBAAKC,UCNc,wCDOjB,uBAAKA,UCNmB,+CDOtB,uBAAKC,IAAKF,aAAF,EAAEA,EAAWG,IAAKC,IAAKR,KAEjC,uBAAKK,UCRc,0CDSjB,qBAAGA,UCRW,uCDQkBH,EAASO,MACzC,uBAAKJ,UCRM,oCDQoBL,GAC/B,wBAAMK,UCRW,0CDQqBF,KAG1C,uBACEE,UCXe,qCDYfK,wBAAyB,CAAEC,OAAQV,Q,qFEuB3C,UApCiB,SAACH,GAAW,IAAD,GACFc,cAAS,MAA1Bb,EADmB,KACbc,EADa,KAEpBC,EAAS,IAAIC,gBAAgBjB,EAAMkB,SAASC,QAC5CC,EAAYJ,EAAOK,IAAI,aACvBC,EAAWN,EAAOK,IAAI,YACtBE,EAASP,EAAOK,IAAI,UAkB1B,OAhBAG,gBAAU,WACHJ,GAAcG,EAKnBE,MAASC,+CAAuBN,EAA3B,aAAiDE,EAAY,CAChEK,QAAS,CAAE,YAAaJ,KAEvBK,MAAK,SAACC,GACL,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAMF,EAAIG,OAASH,EAAII,YAC9C,OAAOJ,EAAIK,UAEZN,MAAK,SAACC,GAAD,OAASd,EAAQc,MACtBM,OAAM,SAACC,GAAD,OAASC,MAAMD,MAZtBC,MAAM,wBAaP,CAACd,EAAQD,EAAUF,IACjBnB,EAGH,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,6BAAQA,EAAKC,OACb,wBAAMS,KAAK,cAAcR,QAAO,GAAKF,EAAKC,SAE5C,gBAAC,IAAD,CAAaD,KAAMA,KARL","file":"component---src-pages-preview-js-5fde887d35efc5ebba76.js","sourcesContent":["import React from \"react\";\nimport * as styles from \"./PostContent.module.css\";\n\nconst PostContent = (props) => {\n  const { title, content, category, publishedAt, thumbnail } = props.post;\n  return (\n    <article>\n      <div className={styles.container}>\n        <div className={styles.thumbnailWrapper}>\n          <img src={thumbnail?.url} alt={title} />\n        </div>\n        <div className={styles.headContent}>\n          <p className={styles.category}>{category.name}</p>\n          <div className={styles.title}>{title}</div>\n          <time className={styles.publishedAt}>{publishedAt}</time>\n        </div>\n      </div>\n      <div\n        className={styles.content}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    </article>\n  );\n};\n\nexport default PostContent;\n","// extracted by mini-css-extract-plugin\nexport const container = \"PostContent-module--container--1fry8\";\nexport const thumbnailWrapper = \"PostContent-module--thumbnailWrapper--2y0rt\";\nexport const headContent = \"PostContent-module--headContent--1KEh4\";\nexport const category = \"PostContent-module--category--3KTJu\";\nexport const title = \"PostContent-module--title--X-F-8\";\nexport const publishedAt = \"PostContent-module--publishedAt--IST68\";\nexport const content = \"PostContent-module--content--22wrV\";","import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Layout from \"../components/Layout\";\nimport PostContent from \"../components/PostContent\";\nconst apiHost = \"https://gatsbyblog.microcms.io/\";\n\nconst PostPage = (props) => {\n  const [post, setPost] = useState(null);\n  const params = new URLSearchParams(props.location.search);\n  const contentId = params.get(\"contentId\");\n  const draftKey = params.get(\"draftKey\");\n  const apiKey = params.get(\"apiKey\");\n\n  useEffect(() => {\n    if (!contentId || !apiKey) {\n      alert(\"missing parameters\");\n      return;\n    }\n\n    fetch(`${apiHost}/api/v1/post/${contentId}?draftKey=${draftKey}`, {\n      headers: { \"X-API-KEY\": apiKey },\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(res.status + res.statusText);\n        return res.json();\n      })\n      .then((res) => setPost(res))\n      .catch((err) => alert(err));\n  }, [apiKey, draftKey, contentId]);\n  if (!post) return <p>Loading</p>;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{post.title}</title>\n        <meta name=\"description\" content={`${post.title}`} />\n      </Helmet>\n      <PostContent post={post} />\n    </Layout>\n  );\n};\n\nexport default PostPage;\n"],"sourceRoot":""}